You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).

You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.


Example 1:

1  2  3          7   4   1
4  5  6    ->    8   5   2
7  8  9          9   6   3


Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [[7,4,1],[8,5,2],[9,6,3]]



class Solution {
    public void rotate(int[][] matrix) {

        int n=matrix.length;

          int e=0;
           for(int i=0;i<n;i++){
               
               int s=0;
                e=n-1;
               while(s<e){
                //    swap(matrix[s][i],matrix[e][i]);
                     int temp =matrix[s][i];
                     matrix[s][i] =matrix[e][i];
                     matrix[e][i] =temp;
                   s++;
                   e--;
               }
           }

           for(int i=0;i<n;i++){
               for(int j=i;j<n;j++){
                //    swap(matrix[i][j],matrix[j][i]);
                int temp =matrix[i][j];
                matrix[i][j] =matrix[j][i];
                matrix[j][i] =temp;
               }
           } 
    }
}
